mixin iconButton(props = {}, extraClasses)
    -
        var iconButtonClasses = {
            "IconButton__xsmall": props.size === 'xsmall',
            "IconButton__small": props.size === 'small' || !props.size,
            "IconButton__medium": props.size === 'medium',
            "IconButton__large": props.size === 'large',
            "destructive": props.destructive === true,
            "disabled": props.disabled === true,
            "toggled": props.toggled === true,
            "compact": props.compact === true,
            "inverted": props.inverted === true
        }
        var iconClasses = {
            "IconButton_icon": true
        }
        var labelClasses = {
            "IconButton_label": true
        }
        var iconSize = 16;
        switch (props.size) {
            case "xsmall":
                iconSize = 12;
                break;
            case "small":
                iconSize = 16;
                break;
            case "medium":
                iconSize = 20;
                break;
            case "large":
                iconSize = 28;
                break;
        }
        var ariaLabel = props.label ? props.label.toLowerCase() : false;
    button.IconButton(id=props.id class=[iconButtonClasses, extraClasses] destructive=(props.destructive || false) inverted=(props.inverted || false) compact=(props.compact || false) toggled=(props.toggled || false) disabled=(props.disabled || false) tabindex=(props.disabled ? -1 : false) aria-label=ariaLabel)
        +icon({glyph: props.iconGlyph, size: iconSize}, iconClasses)
        if props.label
            +label({text: props.label, size: props.size}, labelClasses)
